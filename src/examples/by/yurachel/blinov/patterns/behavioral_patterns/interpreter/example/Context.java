package examples.by.yurachel.blinov.patterns.behavioral_patterns.interpreter.example;

import java.util.ArrayDeque;
/*Интерпретатор был создан в первую очередь для обработки регулярных выраже-
ний, изменения действия логических, арифметических и алгебраических операций.
Пусть дано некоторое простое математическое выражение, записанное
в виде «8 2 7 4 + * -», что эквивалентно более общепринятому выражению
«(4+7)*2-8». Задача представляет собой синтаксический анализ и интерпрета-
цию исходного выражения для вычисления результата.
В класс Context будут помещаться исходные числовые значения выраже-
ния, а также результаты промежуточных вычислений и конечный результат.*/
public class Context {
    private ArrayDeque<Integer> contextValues = new ArrayDeque<>();

    public Integer popValue() {
        return contextValues.pop();//Удаляет и возвращает первый элемен тиз этой очереди.
    }

    public void pushValue(Integer value) {
        this.contextValues.push(value);//Добавляет элемент в начало очереди.
    }
    /*В терминальных классах, ассоциированных с математическими действия-
ми, метод interpret() извлекает значения из объекта Context, выполняет дейст-
вие и записывает результат в тот же объект. Реализация для чисел только добав-
ляет число в контекст.*/
}
