Контроллер: Обрабатывает запросы от пользователя.Обменивается данными с моделью.Показывает пользователю представление страницы.
Переадрасовывает пользователя на другие страницы.

Внутри контроллеров находятся методы.Их может быть любое количество.Обычно(но не всегда),каждый метод соответствует одному Url.
Обычно(но не всегда),методы возвращают строку - название представления ,которое надо показать пользователю.У мето может быть любое название.

Адрес(адрес в строке браузера.) задается с помощью маппинга.Маппинги: GetMapping,PostMapping,PutMapping,DeleteMapping,PatchMapping.Они зависят от того,
какой http запрос (с каким http методом) должен прийти в метод контроллера.Всего их 5.
Иногда пишут устаревший вариант: @RequestMapping(method = RequestMethod.GET). Устаревший вариант так же можно выставлять над классом,@RequestMapping("/people"),
в этом случае URl адреса всех методов будут иметь в начале "/people".Связывает метод контроллера с адресом,по которому можно к этому методу обратиться(из браузера,например).

@Controller - Помечает класс контроллер.Наследуется от аннотации Component.Поэтому ,@ComponentScan аботает с @Controller так же,
как и просто @Component.@Controller,тот же @Component,но с дополнительными возможностями.Для каждого контроллера необходимо создавать свою директорию в pages.

@RequestParam(value="",required="") - Извлекает параметры из request .Параметры передаются через ?ключ=значение&ключ=значение.
Размещается в параметрах метода перед переменной.Value - ключ,а переменная,перед которой тсавиться \та аннотация - значение.
Required тру,фалс,означает,что обязательно нужно передавать параметр или нет.ТАк же параметры можно передавать на jsp странице:
<a href="hello?name=yurachel&lastName=Body">Hello with query</a>

Class Model позволяет передавать на jsp страницу какую то информацию по типу jstl тегов.Для этого нужно передать в параметр метода переменную типа Model,
затем вызвать метод addAttribute и затем вывести на странице с помощью ${   }.


